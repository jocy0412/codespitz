.progress {
    $diameter: 280px;
    $stroke: 5px;
    $rotationSteps: 100;
    $rotationIncrement: (360 / $rotationSteps) / 2;
    background: transparent;
    border-radius: 50%;
    height: $diameter;
    width: $diameter;
    margin: 0 auto;

    &_mask,
    &_fill {
        -moz-backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        border-radius: 50%;
        clip: rect(0, $diameter, $diameter, $diameter / 2);
        height: $diameter;
        overflow: hidden;
        position: absolute;
        width: $diameter;
    }

    &_fill {
        background: #067dfd;
        clip: rect(0, $diameter / 2, $diameter, 0);
    }
    &:after {
        content: attr(data-progress);
        $diameter: $diameter - $stroke * 2;
        background: #fff;
        border-radius: 50%;
        height: $diameter;
        line-height: $diameter;
        margin: $stroke;
        position: absolute;
        text-align: center;
        width: $diameter;
    }

    .progress-ico,
    .progress-inner{
        -moz-backface-visibility: hidden;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        height: $diameter+10;
        position: absolute;
        width: $diameter+10;
        z-index: 100;
    }
    .progress-inner__ico{
        position: absolute;
        left: 50%;
        top: 0;
        z-index: 100;
        width: 14px;
        height: 14px;
        margin-top: -5px;
        border-radius: 50%;
        transform: translateX(-50%);
        background-color: red;
    }
    @for $step from 1 through $rotationSteps {
        &[data-progress="#{$step}"] {
        .progress_mask.isFull,
            .progress_fill,
            .progress-ico,
            .progress-inner {
                -webkit-transform: rotate($step * $rotationIncrement#{deg});
                -moz-transform: rotate($step * $rotationIncrement#{deg});
                -ms-transform: rotate($step * $rotationIncrement#{deg});
                -o-transform: rotate($step * $rotationIncrement#{deg});
                transform: rotate($step * $rotationIncrement#{deg});
            }
        }
    }
}